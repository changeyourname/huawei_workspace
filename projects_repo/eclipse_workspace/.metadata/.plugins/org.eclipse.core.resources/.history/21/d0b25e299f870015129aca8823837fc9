#include <tlm>
#include <tlm_utils/simple_target_socket.h>
#include <tlm_utils/simple_initiator_socket.h>

class target : public sc_core::sc_module {
public:
	tlm_utils::simple_target_socket<target> m_tsocket;

	target(sc_core::sc_module_name name) : sc_module(name) {
		m_tsocket.register_b_transport(this, &target::b_transport);
	}

	void b_transport(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {

	}
};

class initiator : public sc_core::sc_module {
public:
	tlm_utils::simple_initiator_socket<initiator> m_isocket;
	initiator(sc_core::sc_module_name name) : sc_module(name) {

	}
};

int sc_main(int argc, char *argv[]) {
	target t("target");
	initiator i("initiator");

	i.m_isocket(t.m_tsocket);

	sc_core::sc_start();

	return 0;
}
