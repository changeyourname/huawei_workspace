/*
 * cache.cpp
 *
 *  Created on: Nov 11, 2015
 *      Author: uzleo
 */




#include "cache.hpp"

cache::cache(sc_core::sc_module_name name, uint32_t num_child)
	:	sc_module(name), m_isocket("m_isocket"), m_num_child(num_child)
{
	m_tsocket = new tlm_utils::simple_target_socket< cache >[m_num_child];
	for (uint32_t i=0; i<m_num_child; i++) {
		m_tsocket[i].register_b_transport(this, &cache::b_transport);
	}
}


cache::~cache() {
	delete[] m_tsocket;
}


void cache::b_transport(tlm::tlm_generic_payload &trans, sc_core::sc_time &delay) {
	uint64_t addr = trans.get_address()/WORD_SIZE;
	tlm::tlm_command cmd = trans.get_command();
	unsigned char *ptr = trans.get_data_ptr();
	uint32_t len = trans.get_data_length();
	assert(len == WORD_SIZE);

#if 0
	cache_lookup(...)
	if (eviction_needed) {
		evict(...)
	}
	get_cache_block(...)
#endif

}


bool cache_lookup(uint64_t addr) {

}






























